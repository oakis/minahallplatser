// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LoginForm
    email="abc@123.com"
    error="Some login error"
    loading={false}
    password="abc123"
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
    token=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <Message
          message="Some login error"
          type="danger"
        />,
        <Input
          icon="ios-mail"
          keyboardType="email-address"
          onChangeText={[Function]}
          placeholder="din@email.se"
          returnKeyType="next"
          value="abc@123.com"
        />,
        <Input
          icon="ios-key"
          iconSize={22}
          onChangeText={[Function]}
          placeholder="ditt lösenord"
          secureTextEntry={true}
          value="abc123"
        />,
        <Button
          color="primary"
          label="Logga in"
          loading={false}
          onPress={[Function]}
          uppercase={true}
        />,
        <Button
          color="facebook"
          label="Logga in med Facebook"
          loading={false}
          onPress={[Function]}
          uppercase={true}
        />,
        <Button
          fontColor="primary"
          label="Registrera"
          onPress={[Function]}
        />,
        <Button
          fontColor="primary"
          label="Glömt lösenord"
          onPress={[Function]}
        />,
        null,
      ],
      "keyboardDismissMode": "on-drag",
      "keyboardShouldPersistTaps": "always",
      "style": Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "justifyContent": "center",
        "marginLeft": 10,
        "marginRight": 10,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "message": "Some login error",
          "type": "danger",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "ios-mail",
          "keyboardType": "email-address",
          "onChangeText": [Function],
          "placeholder": "din@email.se",
          "returnKeyType": "next",
          "value": "abc@123.com",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "icon": "ios-key",
          "iconSize": 22,
          "onChangeText": [Function],
          "placeholder": "ditt lösenord",
          "secureTextEntry": true,
          "value": "abc123",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "primary",
          "label": "Logga in",
          "loading": false,
          "onPress": [Function],
          "uppercase": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "color": "facebook",
          "label": "Logga in med Facebook",
          "loading": false,
          "onPress": [Function],
          "uppercase": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fontColor": "primary",
          "label": "Registrera",
          "onPress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "fontColor": "primary",
          "label": "Glömt lösenord",
          "onPress": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      null,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Message
            message="Some login error"
            type="danger"
          />,
          <Input
            icon="ios-mail"
            keyboardType="email-address"
            onChangeText={[Function]}
            placeholder="din@email.se"
            returnKeyType="next"
            value="abc@123.com"
          />,
          <Input
            icon="ios-key"
            iconSize={22}
            onChangeText={[Function]}
            placeholder="ditt lösenord"
            secureTextEntry={true}
            value="abc123"
          />,
          <Button
            color="primary"
            label="Logga in"
            loading={false}
            onPress={[Function]}
            uppercase={true}
          />,
          <Button
            color="facebook"
            label="Logga in med Facebook"
            loading={false}
            onPress={[Function]}
            uppercase={true}
          />,
          <Button
            fontColor="primary"
            label="Registrera"
            onPress={[Function]}
          />,
          <Button
            fontColor="primary"
            label="Glömt lösenord"
            onPress={[Function]}
          />,
          null,
        ],
        "keyboardDismissMode": "on-drag",
        "keyboardShouldPersistTaps": "always",
        "style": Object {
          "alignItems": "center",
          "flex": 1,
          "flexDirection": "column",
          "justifyContent": "center",
          "marginLeft": 10,
          "marginRight": 10,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "message": "Some login error",
            "type": "danger",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "ios-mail",
            "keyboardType": "email-address",
            "onChangeText": [Function],
            "placeholder": "din@email.se",
            "returnKeyType": "next",
            "value": "abc@123.com",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "icon": "ios-key",
            "iconSize": 22,
            "onChangeText": [Function],
            "placeholder": "ditt lösenord",
            "secureTextEntry": true,
            "value": "abc123",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "primary",
            "label": "Logga in",
            "loading": false,
            "onPress": [Function],
            "uppercase": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "color": "facebook",
            "label": "Logga in med Facebook",
            "loading": false,
            "onPress": [Function],
            "uppercase": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fontColor": "primary",
            "label": "Registrera",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "fontColor": "primary",
            "label": "Glömt lösenord",
            "onPress": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        null,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
